@model PaginatedList<Administration.Models.HtmlCours>
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
}
<div class="container">
    <br />
    <br />
    <br />
    <center>
        <h2> Cours HTML </h2>
    </center>
    @*<p>
            <a class="btn btn-outline-success" asp-action="Create">Create New</a>
        </p>*@
    <form asp-controller="HtmlCours" asp-action="Index">
        <div class="row">
            <div class="col-md-2 col-6" style="padding-right: 0px;    padding-top: 5px;">
                Rechercher Cours :
            </div>
            <div class="col-md-10 col-6" style="padding-left: 0px;">
                <div class="row">
                    <div class="col-md-10 col-10">
                        <input type="text" name="SearchString" value="@ViewData["currentFilter"]" style="width:100%; padding: .300rem .50rem;">
                    </div>
                    <div class="col-md-2 col-2">
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <button type="submit" class="btn btn-outline-success"><i class="fas fa-search-plus"></i></button>
                            <a asp-action="Create" class="btn btn-outline-danger">
                                <i class="fas fa-user-plus"></i>
                            </a>
                        }
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Etudiant"))
                        {
                            <button type="submit" class="btn btn-outline-success" style="width:100%"><i class="fas fa-search-plus"></i></button>
                            
                        }
                    </div>
                </div>
            </div>
        </div>
    </form>
    <br />
    <div class="row">
        @if (Model.Any())
        {
            foreach (var HtmlCours1 in Model)
            {
                <div class="paddingCard">
                    <div class="card card2">
                        <div class="card-header card-header2">
                            Nom : @HtmlCours1.Nom
                        </div>
                        <div class="card-body">
                            <p class="card-title">
                                <span style="font-size:18px; font-weight:bold;">Description :</span> @HtmlCours1.Description
                            </p>
                            <p class="card-title">
                                <span style="font-size:18px; font-weight:bold;">Téléchargement :</span> <button type="button" class="btn btn-outline-warning" onclick="document.location='@HtmlCours1.UrlFiche'">Télécharger</button>
                            </p>
                        </div>
                        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                        {
                            <div class="card-footer">
                                <form asp-action="Edit" asp-route-id="@HtmlCours1.Id" method="post">
                                    <a class="btn btn-outline-success" asp-action="Edit" asp-controller="HtmlCours" asp-route-id="@HtmlCours1.Id">
                                        Edit
                                    </a>
                                    <button asp-action="Delete" asp-controller="HtmlCours" asp-route-id="@HtmlCours1.Id" type="submit" class="btn btn-outline-danger">
                                        Delete
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }
        }
        else
        {

        }
    </div>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-outline-dark @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-outline-dark @nextDisabled">
        Next
    </a>
</div>

<style>
    td, th {
        width: 25%;
    }
</style>